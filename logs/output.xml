<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.9.1 on win32)" generated="20210216 13:21:26.376" rpa="false">
<suite id="s1" name="Player" source="C:\RFW\ParodifyRFW\tests\player.robot">
<test id="s1-t1" name="Reproduzir Paródia">
<kw name="Open URL" library="login">
<kw name="Open Browser" library="Browser">
<tags>
<tag>BrowserControl</tag>
<tag>Setter</tag>
</tags>
<doc>Opens a new browser instance. Use this keyword for quick experiments or debugging sessions.
Use `New Page` directly instead of `Open Browser` for production and automated execution.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<arguments>
<arg>http://parodify.herokuapp.com/users/sign_in</arg>
<arg>chromium</arg>
</arguments>
<msg timestamp="20210216 13:21:27.061" level="WARN">Open Browser is for quick experimentation and debugging only. Use New Page for production.</msg>
<msg timestamp="20210216 13:21:27.062" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210216 13:21:27.380" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<msg timestamp="20210216 13:21:27.381" level="INFO">{"acceptDownloads": false, "ignoreHTTPSErrors": false, "bypassCSP": false, "deviceScaleFactor": 1.0, "isMobile": false, "hasTouch": false, "javaScriptEnabled": true, "offline": false, "hideRfBrowser": false}</msg>
<msg timestamp="20210216 13:21:27.391" level="INFO">Successfully created context with options: {"acceptDownloads":false,"ignoreHTTPSErrors":false,"bypassCSP":false,"deviceScaleFactor":1,"isMobile":false,"hasTouch":false,"javaScriptEnabled":true,"offline":false,"hideRfBrowser":false}</msg>
<msg timestamp="20210216 13:21:30.239" level="INFO">Successfully initialized new page object and opened url: http://parodify.herokuapp.com/users/sign_in</msg>
<status status="PASS" starttime="20210216 13:21:27.061" endtime="20210216 13:21:30.240"></status>
</kw>
<status status="PASS" starttime="20210216 13:21:27.061" endtime="20210216 13:21:30.240"></status>
</kw>
<kw name="Login With" library="login">
<arguments>
<arg>usuario@teste.com</arg>
<arg>senha321</arg>
</arguments>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>css=input[name*=email]</arg>
<arg>${email_arg}</arg>
</arguments>
<msg timestamp="20210216 13:21:30.241" level="INFO">Fills the text 'usuario@teste.com' in the given field.</msg>
<status status="PASS" starttime="20210216 13:21:30.241" endtime="20210216 13:21:30.284"></status>
</kw>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>css=#user_password</arg>
<arg>${password_arg}</arg>
</arguments>
<msg timestamp="20210216 13:21:30.284" level="INFO">Fills the text 'senha321' in the given field.</msg>
<status status="PASS" starttime="20210216 13:21:30.284" endtime="20210216 13:21:30.301"></status>
</kw>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>css=input[type=submit]</arg>
</arguments>
<status status="PASS" starttime="20210216 13:21:30.301" endtime="20210216 13:21:30.865"></status>
</kw>
<status status="PASS" starttime="20210216 13:21:30.240" endtime="20210216 13:21:30.866"></status>
</kw>
<kw name="Logout Link Should Be Visible" library="home_login">
<kw name="Wait For Elements State" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Wait</tag>
</tags>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<arguments>
<arg>css=a[href$=sign_out]</arg>
<arg>visible</arg>
<arg>10</arg>
</arguments>
<msg timestamp="20210216 13:21:31.066" level="INFO">Wait for Element with selector: css=a[href$=sign_out]</msg>
<status status="PASS" starttime="20210216 13:21:30.867" endtime="20210216 13:21:31.067"></status>
</kw>
<status status="PASS" starttime="20210216 13:21:30.866" endtime="20210216 13:21:31.067"></status>
</kw>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>css=a[href*=search]</arg>
</arguments>
<status status="PASS" starttime="20210216 13:21:31.068" endtime="20210216 13:21:31.108"></status>
</kw>
<kw name="Wait For Elements State" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Wait</tag>
</tags>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<arguments>
<arg>xpath=//h2[contains(text(),"Buscar")]</arg>
<arg>visible</arg>
<arg>10</arg>
</arguments>
<msg timestamp="20210216 13:21:31.458" level="INFO">Wait for Element with selector: xpath=//h2[contains(text(),"Buscar")]</msg>
<status status="PASS" starttime="20210216 13:21:31.109" endtime="20210216 13:21:31.459"></status>
</kw>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>xpath=//img[contains(@src, "sertanejo.png")]/..</arg>
</arguments>
<status status="PASS" starttime="20210216 13:21:31.459" endtime="20210216 13:21:31.839"></status>
</kw>
<kw name="Wait For Elements State" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Wait</tag>
</tags>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<arguments>
<arg>xpath=//h2[contains(text(),"Sertanejo")]</arg>
<arg>visible</arg>
<arg>10</arg>
</arguments>
<msg timestamp="20210216 13:21:32.326" level="INFO">Wait for Element with selector: xpath=//h2[contains(text(),"Sertanejo")]</msg>
<status status="PASS" starttime="20210216 13:21:31.840" endtime="20210216 13:21:32.327"></status>
</kw>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>xpath=//p[contains(text(),"Marcus e Debug")]/..</arg>
</arguments>
<status status="PASS" starttime="20210216 13:21:32.327" endtime="20210216 13:21:32.384"></status>
</kw>
<kw name="Wait For Elements State" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Wait</tag>
</tags>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<arguments>
<arg>xpath=//h2[contains(text(),"Músicas")]</arg>
<arg>visible</arg>
<arg>10</arg>
</arguments>
<msg timestamp="20210216 13:21:32.791" level="INFO">Wait for Element with selector: xpath=//h2[contains(text(),"Músicas")]</msg>
<status status="PASS" starttime="20210216 13:21:32.384" endtime="20210216 13:21:32.791"></status>
</kw>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>css=.play-button</arg>
</arguments>
<status status="PASS" starttime="20210216 13:21:32.792" endtime="20210216 13:21:32.830"></status>
</kw>
<kw name="Get Style" library="Browser">
<tags>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
</tags>
<doc>Gets the computed style properties of the element selected by ``selector``.</doc>
<arguments>
<arg>xpath=xpath=//h2[contains(text(),"Bug de Manhã")]/../../..</arg>
<arg>color</arg>
<arg>equal</arg>
<arg>rgb(255, 0, 180)</arg>
</arguments>
<msg timestamp="20210216 13:21:34.159" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Reproduzir_Pardia_FAILURE_SCREENSHOT_5.png"&gt;&lt;img src="Reproduzir_Pardia_FAILURE_SCREENSHOT_5.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20210216 13:21:46.336" level="FAIL">Error: page.$eval: Evaluation failed: TypeError: Failed to execute 'evaluate' on 'Document': The result is not a node set, and therefore cannot be converted to the desired type.
    at Object.query (&lt;anonymous&gt;:2914:29)
    at InjectedScript._queryEngine (&lt;anonymous&gt;:1558:47)
    at InjectedScript._querySelectorRecursively (&lt;anonymous&gt;:1521:25)
    at InjectedScript.querySelector (&lt;anonymous&gt;:1516:21)
    at eval (eval at callFunction (:307:29), &lt;anonymous&gt;:2:29)
    at UtilityScript.callFunction (&lt;anonymous&gt;:308:24)
    at UtilityScript.&lt;anonymous&gt; (&lt;anonymous&gt;:1:44)</msg>
<status status="FAIL" starttime="20210216 13:21:32.830" endtime="20210216 13:21:46.336"></status>
</kw>
<kw name="Take Screenshot" library="Browser" type="teardown">
<tags>
<tag>PageContent</tag>
</tags>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210216 13:21:46.639" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-17.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-17.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210216 13:21:46.337" endtime="20210216 13:21:46.639"></status>
</kw>
<status status="FAIL" starttime="20210216 13:21:27.057" endtime="20210216 13:21:46.639" critical="yes">Error: page.$eval: Evaluation failed: TypeError: Failed to execute 'evaluate' on 'Document': The result is not a node set, and therefore cannot be converted to the desired type.
    at Object.query (&lt;anonymous&gt;:2914:29)
    at InjectedScript._queryEngine (&lt;anonymous&gt;:1558:47)
    at InjectedScript._querySelectorRecursively (&lt;anonymous&gt;:1521:25)
    at InjectedScript.querySelector (&lt;anonymous&gt;:1516:21)
    at eval (eval at callFunction (:307:29), &lt;anonymous&gt;:2:29)
    at UtilityScript.callFunction (&lt;anonymous&gt;:308:24)
    at UtilityScript.&lt;anonymous&gt; (&lt;anonymous&gt;:1:44)</status>
</test>
<doc>Testando o player de Reprodução</doc>
<status status="FAIL" starttime="20210216 13:21:26.377" endtime="20210216 13:21:46.711"></status>
</suite>
<statistics>
<total>
<stat pass="0" fail="1">Critical Tests</stat>
<stat pass="0" fail="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="0" fail="1" id="s1" name="Player">Player</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20210216 13:21:27.061" level="WARN">Open Browser is for quick experimentation and debugging only. Use New Page for production.</msg>
</errors>
</robot>
