<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.9.1 on win32)" generated="20210216 10:29:31.847" rpa="false">
<suite id="s1" name="Login" source="C:\RFW\ParodifyRFW\login.robot">
<test id="s1-t1" name="Login com sucesso">
<kw name="Open URL" library="login_actions">
<kw name="Open Browser" library="Browser">
<tags>
<tag>BrowserControl</tag>
<tag>Setter</tag>
</tags>
<doc>Opens a new browser instance. Use this keyword for quick experiments or debugging sessions.
Use `New Page` directly instead of `Open Browser` for production and automated execution.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<arguments>
<arg>http://parodify.herokuapp.com/users/sign_in</arg>
<arg>chromium</arg>
</arguments>
<msg timestamp="20210216 10:29:33.199" level="WARN">Open Browser is for quick experimentation and debugging only. Use New Page for production.</msg>
<msg timestamp="20210216 10:29:33.201" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210216 10:29:33.892" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<msg timestamp="20210216 10:29:33.894" level="INFO">{"acceptDownloads": false, "ignoreHTTPSErrors": false, "bypassCSP": false, "deviceScaleFactor": 1.0, "isMobile": false, "hasTouch": false, "javaScriptEnabled": true, "offline": false, "hideRfBrowser": false}</msg>
<msg timestamp="20210216 10:29:33.930" level="INFO">Successfully created context with options: {"acceptDownloads":false,"ignoreHTTPSErrors":false,"bypassCSP":false,"deviceScaleFactor":1,"isMobile":false,"hasTouch":false,"javaScriptEnabled":true,"offline":false,"hideRfBrowser":false}</msg>
<msg timestamp="20210216 10:29:37.962" level="INFO">Successfully initialized new page object and opened url: http://parodify.herokuapp.com/users/sign_in</msg>
<status status="PASS" starttime="20210216 10:29:33.197" endtime="20210216 10:29:37.963"></status>
</kw>
<status status="PASS" starttime="20210216 10:29:33.197" endtime="20210216 10:29:37.963"></status>
</kw>
<kw name="Login With" library="login_actions">
<arguments>
<arg>usuario@teste.com</arg>
<arg>senha321</arg>
</arguments>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>css=input[name*=email]</arg>
<arg>${email_arg}</arg>
</arguments>
<msg timestamp="20210216 10:29:37.967" level="INFO">Fills the text 'usuario@teste.com' in the given field.</msg>
<status status="PASS" starttime="20210216 10:29:37.966" endtime="20210216 10:29:38.143"></status>
</kw>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>css=#user_password</arg>
<arg>${password_arg}</arg>
</arguments>
<msg timestamp="20210216 10:29:38.144" level="INFO">Fills the text 'senha321' in the given field.</msg>
<status status="PASS" starttime="20210216 10:29:38.143" endtime="20210216 10:29:38.194"></status>
</kw>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>css=input[type=submit]</arg>
</arguments>
<status status="PASS" starttime="20210216 10:29:38.195" endtime="20210216 10:29:39.068"></status>
</kw>
<status status="PASS" starttime="20210216 10:29:37.965" endtime="20210216 10:29:39.069"></status>
</kw>
<kw name="Wait For Elements State" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Wait</tag>
</tags>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<arguments>
<arg>css=a[href$=sign_out]</arg>
<arg>visible</arg>
<arg>10</arg>
</arguments>
<msg timestamp="20210216 10:29:39.504" level="INFO">Wait for Element with selector: css=a[href$=sign_out]</msg>
<status status="PASS" starttime="20210216 10:29:39.071" endtime="20210216 10:29:39.510"></status>
</kw>
<kw name="Take Screenshot" library="Browser" type="teardown">
<tags>
<tag>PageContent</tag>
</tags>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210216 10:29:39.923" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-1.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210216 10:29:39.511" endtime="20210216 10:29:39.923"></status>
</kw>
<status status="PASS" starttime="20210216 10:29:33.188" endtime="20210216 10:29:39.924" critical="yes"></status>
</test>
<test id="s1-t2" name="Senha Incorreta">
<kw name="Open URL" library="login_actions">
<kw name="Open Browser" library="Browser">
<tags>
<tag>BrowserControl</tag>
<tag>Setter</tag>
</tags>
<doc>Opens a new browser instance. Use this keyword for quick experiments or debugging sessions.
Use `New Page` directly instead of `Open Browser` for production and automated execution.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<arguments>
<arg>http://parodify.herokuapp.com/users/sign_in</arg>
<arg>chromium</arg>
</arguments>
<msg timestamp="20210216 10:29:40.077" level="WARN">Open Browser is for quick experimentation and debugging only. Use New Page for production.</msg>
<msg timestamp="20210216 10:29:40.081" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210216 10:29:40.631" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<msg timestamp="20210216 10:29:40.639" level="INFO">{"acceptDownloads": false, "ignoreHTTPSErrors": false, "bypassCSP": false, "deviceScaleFactor": 1.0, "isMobile": false, "hasTouch": false, "javaScriptEnabled": true, "offline": false, "hideRfBrowser": false}</msg>
<msg timestamp="20210216 10:29:40.693" level="INFO">Successfully created context with options: {"acceptDownloads":false,"ignoreHTTPSErrors":false,"bypassCSP":false,"deviceScaleFactor":1,"isMobile":false,"hasTouch":false,"javaScriptEnabled":true,"offline":false,"hideRfBrowser":false}</msg>
<msg timestamp="20210216 10:29:43.786" level="INFO">Successfully initialized new page object and opened url: http://parodify.herokuapp.com/users/sign_in</msg>
<status status="PASS" starttime="20210216 10:29:40.077" endtime="20210216 10:29:43.786"></status>
</kw>
<status status="PASS" starttime="20210216 10:29:40.076" endtime="20210216 10:29:43.787"></status>
</kw>
<kw name="Login With" library="login_actions">
<arguments>
<arg>usuario@teste.com</arg>
<arg>abc431</arg>
</arguments>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>css=input[name*=email]</arg>
<arg>${email_arg}</arg>
</arguments>
<msg timestamp="20210216 10:29:43.790" level="INFO">Fills the text 'usuario@teste.com' in the given field.</msg>
<status status="PASS" starttime="20210216 10:29:43.790" endtime="20210216 10:29:43.904"></status>
</kw>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>css=#user_password</arg>
<arg>${password_arg}</arg>
</arguments>
<msg timestamp="20210216 10:29:43.906" level="INFO">Fills the text 'abc431' in the given field.</msg>
<status status="PASS" starttime="20210216 10:29:43.905" endtime="20210216 10:29:43.969"></status>
</kw>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>css=input[type=submit]</arg>
</arguments>
<status status="PASS" starttime="20210216 10:29:43.970" endtime="20210216 10:29:44.651"></status>
</kw>
<status status="PASS" starttime="20210216 10:29:43.788" endtime="20210216 10:29:44.653"></status>
</kw>
<kw name="Alert Should Be" library="login_actions">
<arguments>
<arg>Opps! Dados de acesso incorretos!</arg>
</arguments>
<kw name="Get Text" library="Browser">
<tags>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
</tags>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<arguments>
<arg>css=.is-danger .message-body</arg>
<arg>==</arg>
<arg>Opps! Dados de acesso incorretos!</arg>
</arguments>
<status status="PASS" starttime="20210216 10:29:44.655" endtime="20210216 10:29:45.053"></status>
</kw>
<status status="PASS" starttime="20210216 10:29:44.654" endtime="20210216 10:29:45.053"></status>
</kw>
<kw name="Take Screenshot" library="Browser" type="teardown">
<tags>
<tag>PageContent</tag>
</tags>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210216 10:29:45.861" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-2.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210216 10:29:45.055" endtime="20210216 10:29:45.861"></status>
</kw>
<status status="PASS" starttime="20210216 10:29:40.068" endtime="20210216 10:29:45.862" critical="yes"></status>
</test>
<test id="s1-t3" name="Email não exite">
<kw name="Open URL" library="login_actions">
<kw name="Open Browser" library="Browser">
<tags>
<tag>BrowserControl</tag>
<tag>Setter</tag>
</tags>
<doc>Opens a new browser instance. Use this keyword for quick experiments or debugging sessions.
Use `New Page` directly instead of `Open Browser` for production and automated execution.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<arguments>
<arg>http://parodify.herokuapp.com/users/sign_in</arg>
<arg>chromium</arg>
</arguments>
<msg timestamp="20210216 10:29:46.004" level="WARN">Open Browser is for quick experimentation and debugging only. Use New Page for production.</msg>
<msg timestamp="20210216 10:29:46.008" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210216 10:29:46.838" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<msg timestamp="20210216 10:29:46.840" level="INFO">{"acceptDownloads": false, "ignoreHTTPSErrors": false, "bypassCSP": false, "deviceScaleFactor": 1.0, "isMobile": false, "hasTouch": false, "javaScriptEnabled": true, "offline": false, "hideRfBrowser": false}</msg>
<msg timestamp="20210216 10:29:46.858" level="INFO">Successfully created context with options: {"acceptDownloads":false,"ignoreHTTPSErrors":false,"bypassCSP":false,"deviceScaleFactor":1,"isMobile":false,"hasTouch":false,"javaScriptEnabled":true,"offline":false,"hideRfBrowser":false}</msg>
<msg timestamp="20210216 10:29:49.627" level="INFO">Successfully initialized new page object and opened url: http://parodify.herokuapp.com/users/sign_in</msg>
<status status="PASS" starttime="20210216 10:29:46.003" endtime="20210216 10:29:49.627"></status>
</kw>
<status status="PASS" starttime="20210216 10:29:46.002" endtime="20210216 10:29:49.629"></status>
</kw>
<kw name="Login With" library="login_actions">
<arguments>
<arg>usuarionexiste@teste.com</arg>
<arg>senha321</arg>
</arguments>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>css=input[name*=email]</arg>
<arg>${email_arg}</arg>
</arguments>
<msg timestamp="20210216 10:29:49.632" level="INFO">Fills the text 'usuarionexiste@teste.com' in the given field.</msg>
<status status="PASS" starttime="20210216 10:29:49.631" endtime="20210216 10:29:49.709"></status>
</kw>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>css=#user_password</arg>
<arg>${password_arg}</arg>
</arguments>
<msg timestamp="20210216 10:29:49.709" level="INFO">Fills the text 'senha321' in the given field.</msg>
<status status="PASS" starttime="20210216 10:29:49.709" endtime="20210216 10:29:49.734"></status>
</kw>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>css=input[type=submit]</arg>
</arguments>
<status status="PASS" starttime="20210216 10:29:49.734" endtime="20210216 10:29:50.191"></status>
</kw>
<status status="PASS" starttime="20210216 10:29:49.630" endtime="20210216 10:29:50.192"></status>
</kw>
<kw name="Alert Should Be" library="login_actions">
<arguments>
<arg>Opps! Dados de acesso incorretos!</arg>
</arguments>
<kw name="Get Text" library="Browser">
<tags>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
</tags>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<arguments>
<arg>css=.is-danger .message-body</arg>
<arg>==</arg>
<arg>Opps! Dados de acesso incorretos!</arg>
</arguments>
<status status="PASS" starttime="20210216 10:29:50.194" endtime="20210216 10:29:50.486"></status>
</kw>
<status status="PASS" starttime="20210216 10:29:50.193" endtime="20210216 10:29:50.486"></status>
</kw>
<kw name="Take Screenshot" library="Browser" type="teardown">
<tags>
<tag>PageContent</tag>
</tags>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210216 10:29:51.091" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-3.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-3.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210216 10:29:50.487" endtime="20210216 10:29:51.091"></status>
</kw>
<status status="PASS" starttime="20210216 10:29:45.994" endtime="20210216 10:29:51.092" critical="yes"></status>
</test>
<test id="s1-t4" name="Email não informado">
<kw name="Open URL" library="login_actions">
<kw name="Open Browser" library="Browser">
<tags>
<tag>BrowserControl</tag>
<tag>Setter</tag>
</tags>
<doc>Opens a new browser instance. Use this keyword for quick experiments or debugging sessions.
Use `New Page` directly instead of `Open Browser` for production and automated execution.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<arguments>
<arg>http://parodify.herokuapp.com/users/sign_in</arg>
<arg>chromium</arg>
</arguments>
<msg timestamp="20210216 10:29:51.227" level="WARN">Open Browser is for quick experimentation and debugging only. Use New Page for production.</msg>
<msg timestamp="20210216 10:29:51.229" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210216 10:29:51.961" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<msg timestamp="20210216 10:29:51.966" level="INFO">{"acceptDownloads": false, "ignoreHTTPSErrors": false, "bypassCSP": false, "deviceScaleFactor": 1.0, "isMobile": false, "hasTouch": false, "javaScriptEnabled": true, "offline": false, "hideRfBrowser": false}</msg>
<msg timestamp="20210216 10:29:51.987" level="INFO">Successfully created context with options: {"acceptDownloads":false,"ignoreHTTPSErrors":false,"bypassCSP":false,"deviceScaleFactor":1,"isMobile":false,"hasTouch":false,"javaScriptEnabled":true,"offline":false,"hideRfBrowser":false}</msg>
<msg timestamp="20210216 10:29:55.050" level="INFO">Successfully initialized new page object and opened url: http://parodify.herokuapp.com/users/sign_in</msg>
<status status="PASS" starttime="20210216 10:29:51.227" endtime="20210216 10:29:55.051"></status>
</kw>
<status status="PASS" starttime="20210216 10:29:51.226" endtime="20210216 10:29:55.051"></status>
</kw>
<kw name="Login With" library="login_actions">
<arguments>
<arg>${EMPTY}</arg>
<arg>abc321</arg>
</arguments>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>css=input[name*=email]</arg>
<arg>${email_arg}</arg>
</arguments>
<msg timestamp="20210216 10:29:55.053" level="INFO">Fills the text '' in the given field.</msg>
<status status="PASS" starttime="20210216 10:29:55.053" endtime="20210216 10:29:55.106"></status>
</kw>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>css=#user_password</arg>
<arg>${password_arg}</arg>
</arguments>
<msg timestamp="20210216 10:29:55.106" level="INFO">Fills the text 'abc321' in the given field.</msg>
<status status="PASS" starttime="20210216 10:29:55.106" endtime="20210216 10:29:55.157"></status>
</kw>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>css=input[type=submit]</arg>
</arguments>
<status status="PASS" starttime="20210216 10:29:55.157" endtime="20210216 10:29:55.644"></status>
</kw>
<status status="PASS" starttime="20210216 10:29:55.052" endtime="20210216 10:29:55.645"></status>
</kw>
<kw name="Alert Should Be" library="login_actions">
<arguments>
<arg>Opps! Dados de acesso incorretos!</arg>
</arguments>
<kw name="Get Text" library="Browser">
<tags>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
</tags>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<arguments>
<arg>css=.is-danger .message-body</arg>
<arg>==</arg>
<arg>Opps! Dados de acesso incorretos!</arg>
</arguments>
<status status="PASS" starttime="20210216 10:29:55.647" endtime="20210216 10:29:56.036"></status>
</kw>
<status status="PASS" starttime="20210216 10:29:55.646" endtime="20210216 10:29:56.036"></status>
</kw>
<kw name="Take Screenshot" library="Browser" type="teardown">
<tags>
<tag>PageContent</tag>
</tags>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210216 10:29:56.638" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-4.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-4.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210216 10:29:56.037" endtime="20210216 10:29:56.638"></status>
</kw>
<status status="PASS" starttime="20210216 10:29:51.219" endtime="20210216 10:29:56.638" critical="yes"></status>
</test>
<test id="s1-t5" name="Senha não informada">
<kw name="Open URL" library="login_actions">
<kw name="Open Browser" library="Browser">
<tags>
<tag>BrowserControl</tag>
<tag>Setter</tag>
</tags>
<doc>Opens a new browser instance. Use this keyword for quick experiments or debugging sessions.
Use `New Page` directly instead of `Open Browser` for production and automated execution.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<arguments>
<arg>http://parodify.herokuapp.com/users/sign_in</arg>
<arg>chromium</arg>
</arguments>
<msg timestamp="20210216 10:29:56.742" level="WARN">Open Browser is for quick experimentation and debugging only. Use New Page for production.</msg>
<msg timestamp="20210216 10:29:56.743" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210216 10:29:57.222" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<msg timestamp="20210216 10:29:57.225" level="INFO">{"acceptDownloads": false, "ignoreHTTPSErrors": false, "bypassCSP": false, "deviceScaleFactor": 1.0, "isMobile": false, "hasTouch": false, "javaScriptEnabled": true, "offline": false, "hideRfBrowser": false}</msg>
<msg timestamp="20210216 10:29:57.261" level="INFO">Successfully created context with options: {"acceptDownloads":false,"ignoreHTTPSErrors":false,"bypassCSP":false,"deviceScaleFactor":1,"isMobile":false,"hasTouch":false,"javaScriptEnabled":true,"offline":false,"hideRfBrowser":false}</msg>
<msg timestamp="20210216 10:30:00.334" level="INFO">Successfully initialized new page object and opened url: http://parodify.herokuapp.com/users/sign_in</msg>
<status status="PASS" starttime="20210216 10:29:56.742" endtime="20210216 10:30:00.334"></status>
</kw>
<status status="PASS" starttime="20210216 10:29:56.741" endtime="20210216 10:30:00.335"></status>
</kw>
<kw name="Login With" library="login_actions">
<arguments>
<arg>usuario@teste.com</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>css=input[name*=email]</arg>
<arg>${email_arg}</arg>
</arguments>
<msg timestamp="20210216 10:30:00.337" level="INFO">Fills the text 'usuario@teste.com' in the given field.</msg>
<status status="PASS" starttime="20210216 10:30:00.337" endtime="20210216 10:30:00.435"></status>
</kw>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>css=#user_password</arg>
<arg>${password_arg}</arg>
</arguments>
<msg timestamp="20210216 10:30:00.436" level="INFO">Fills the text '' in the given field.</msg>
<status status="PASS" starttime="20210216 10:30:00.435" endtime="20210216 10:30:00.479"></status>
</kw>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>css=input[type=submit]</arg>
</arguments>
<status status="PASS" starttime="20210216 10:30:00.480" endtime="20210216 10:30:00.725"></status>
</kw>
<status status="PASS" starttime="20210216 10:30:00.337" endtime="20210216 10:30:00.725"></status>
</kw>
<kw name="Alert Should Be" library="login_actions">
<arguments>
<arg>Opps! Dados de acesso incorretos!</arg>
</arguments>
<kw name="Get Text" library="Browser">
<tags>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
</tags>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<arguments>
<arg>css=.is-danger .message-body</arg>
<arg>==</arg>
<arg>Opps! Dados de acesso incorretos!</arg>
</arguments>
<status status="PASS" starttime="20210216 10:30:00.727" endtime="20210216 10:30:01.020"></status>
</kw>
<status status="PASS" starttime="20210216 10:30:00.726" endtime="20210216 10:30:01.020"></status>
</kw>
<kw name="Take Screenshot" library="Browser" type="teardown">
<tags>
<tag>PageContent</tag>
</tags>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210216 10:30:01.666" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-5.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-5.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210216 10:30:01.021" endtime="20210216 10:30:01.666"></status>
</kw>
<status status="PASS" starttime="20210216 10:29:56.736" endtime="20210216 10:30:01.666" critical="yes"></status>
</test>
<doc>Testes da página de login</doc>
<status status="PASS" starttime="20210216 10:29:31.850" endtime="20210216 10:30:01.771"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="0">Critical Tests</stat>
<stat pass="5" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="5" fail="0" id="s1" name="Login">Login</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20210216 10:29:33.199" level="WARN">Open Browser is for quick experimentation and debugging only. Use New Page for production.</msg>
<msg timestamp="20210216 10:29:40.077" level="WARN">Open Browser is for quick experimentation and debugging only. Use New Page for production.</msg>
<msg timestamp="20210216 10:29:46.004" level="WARN">Open Browser is for quick experimentation and debugging only. Use New Page for production.</msg>
<msg timestamp="20210216 10:29:51.227" level="WARN">Open Browser is for quick experimentation and debugging only. Use New Page for production.</msg>
<msg timestamp="20210216 10:29:56.742" level="WARN">Open Browser is for quick experimentation and debugging only. Use New Page for production.</msg>
</errors>
</robot>
